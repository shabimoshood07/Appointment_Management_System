datasource db {
  url      = env("DATABASE_URL")
  provider = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

// model User {
//     id        Int      @id @default(autoincrement())
//     email     String   @unique
//     name      String?
//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt
// }

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role          @default(USER)
  accounts      Account[]
  sessions      Session[]
  Appointment   Appointment[]
}

enum Role {
  USER
  ADMIN
}

model Appointment {
  id        String            @id @default(cuid())
  title     String
  date      DateTime
  start     String
  end       String
  status    AppointmentStatus
  user      User              @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
}

enum AppointmentStatus {
  CONFIRMED
  PAID
  CANCELLED
}

// model VerificationToken {
//   identifier String
//   token      String   @unique
//   expires    DateTime

//   @@unique([identifier, token])
// }
